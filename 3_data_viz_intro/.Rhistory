mpg$class
library(ggplot2)
data("mpg")
mpg
mpg$class
str(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +
scale_shape_manual(values = 1:7)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +
scale_shape_manual(values = 1:10)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class)) +
scale_shape_manual(values = 1:7)
x <- c(3.385,0.48,1.35,465,36.33,27.66,14.83,1.04,4.19,0.425,0.101,0.92,1,0.005,0.06,3.5,2,1.7,2547,0.023,187.1,521,0.785,10,3.3,0.2,1.41,529,207,85,0.75,62,6654,3.5,6.8,35,4.05,0.12,0.023,0.01,1.4,250,2.5,55.5,100,52.16,10.55,0.55,60,3.6,4.288,0.28,0.075,0.122,0.048,192,3,160,0.9,1.62,0.104,4.235)
y <- c(44.5,15.5,8.1,423,119.5,115,98.2,5.5,58,6.4,4,5.7,6.6,0.14,1,10.8,12.3,6.3,4603,0.3,419,655,3.5,115,25.6,5,17.5,680,406,325,12.3,1320,5712,3.9,179,56,17,1,0.4,0.25,12.5,490,12.1,175,157,440,179.5,2.4,81,21,39.2,1.9,1.2,3,0.33,180,25,169,2.6,11.4,2.5,50.4)
size_mass <- data.frame(size = x, mass = y)
size_mass
x <- c(3.385,0.48,1.35,465,36.33,27.66,14.83,1.04,4.19,0.425,0.101,0.92,1,0.005,0.06,3.5,2,1.7,2547,0.023,187.1,521,0.785,10,3.3,0.2,1.41,529,207,85,0.75,62,6654,3.5,6.8,35,4.05,0.12,0.023,0.01,1.4,250,2.5,55.5,100,52.16,10.55,0.55,60,3.6,4.288,0.28,0.075,0.122,0.048,192,3,160,0.9,1.62,0.104,4.235)
y <- c(44.5,15.5,8.1,423,119.5,115,98.2,5.5,58,6.4,4,5.7,6.6,0.14,1,10.8,12.3,6.3,4603,0.3,419,655,3.5,115,25.6,5,17.5,680,406,325,12.3,1320,5712,3.9,179,56,17,1,0.4,0.25,12.5,490,12.1,175,157,440,179.5,2.4,81,21,39.2,1.9,1.2,3,0.33,180,25,169,2.6,11.4,2.5,50.4)
size_mass <- data.frame (size = x, mass = y)
size_mass
ggplot(sizeMass, aes(size, mass)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
ggplot(size_mass, aes(size, mass)) +
geom_point() +
geom_smooth(method = "lm", color = "red", se = FALSE)
size_mass <- size_mass %>%
mutate(size_log10 = log10 (size),
mass_long10 = log10 (mass))
ggplot(size_mass, aes(x = size_log10, y = mass_log10)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
labs(x = "log10(size)", y = "log10(mass)")
size_mass <- size_mass %>%
mutate(size_log10 = log10 (size),
mass_log10 = log10 (mass))
ggplot(size_mass, aes(x = size_log10, y = mass_log10)) +
geom_point() +
scale_x_log10() +
scale_y_log10() +
labs(x = "log10(size)", y = "log10(mass)")
size_mass
library(dplyr)
size_mass
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
library(ggplot2)
data("mpg")
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
ggplot(data = mpg, aes(x = class, y = drv)) +
geom_point() +
facet_grid(hyw ~ displ)
ggplot(data = mpg, aes(x = class, y = drv)) +
geom_point() +
facet_grid(hwy ~ displ)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
rand()
rnorm()
rnorm(30)
rnorm(1)
rnorm(1)
sample()
sample(1:500, replace=T)
rnorm(1, mean=20, sd=1)
rnorm(10, mean=20, sd=1)
rnorm(10, mean=20, sd=4.5)
rbnom (1,1000,0.5)
rbinom (1,1000,0.5)
rbinom (10,1000,0.07)
# Load the necessary libraries (if not already loaded)
# install.packages("ggplot2")  # Uncomment and run if ggplot2 is not installed
library(ggplot2)
# Create a sample plot
data <- data.frame(x = 1:5, y = c(2, 4, 6, 8, 10))
# Customize the y-axis label with specific font and upper script unit
ggplot(data, aes(x, y)) +
geom_point() +
labs(
y = expression(paste("My Y-Axis Label (", mu, "g/mL)")),
title = "Custom Y-Axis Label"
)
# Create a sample plot with a superscripted y-axis label
plot(1:5, 1:5, type = "n", main = "Y-Axis with Superscript")
# Customize the y-axis label with superscript
text(1, 3, expression("Y-axis Label"^{superscripted_text}), srt = 90)
install.packages("lavaan")
install.packages("semTools")
install.packages("randomForest")
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
library(ggplot2)
data("mpg")
mpg
# first method
number_row <- nrow (mpg)
number_row
number_column <- ncol (mpg)
number_column
# second method
dimensions <- dim (mpg)
dimensions
total_row <- dimensions [1]
total_row
total_columns <- dimensions [2]
total_columns
ggplot(data = mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(class ~ drv)
